{"version":3,"sources":["adapter.ts"],"names":[],"mappings":"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","file":"adapter.js","sourcesContent":["/*\n* Node Web Bluetooth\n* Copyright (c) 2017 Rob Moran\n*\n* The MIT License (MIT)\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { platform } from \"os\";\nimport { EventEmitter } from \"events\";\nimport { getCanonicalUUID } from \"./helpers\";\nimport { BluetoothDevice } from \"./device\";\nimport { BluetoothRemoteGATTService } from \"./service\";\nimport { BluetoothRemoteGATTDescriptor } from \"./descriptor\";\nimport { BluetoothRemoteGATTCharacteristic } from \"./characteristic\";\nimport * as noble from \"noble\";\n\n/**\n * @hidden\n */\nexport interface Adapter extends EventEmitter {\n    getEnabled: (completeFn: (enabled: boolean) => void) => void;\n    startScan: (serviceUUIDs: Array<string>, foundFn: (device: Partial<BluetoothDevice>) => void, completeFn?: () => void, errorFn?: (errorMsg: string) => void) => void;\n    stopScan: (errorFn?: (errorMsg: string) => void) => void;\n    connect: (handle: string, connectFn: () => void, disconnectFn: () => void,\terrorFn?: (errorMsg: string) => void) => void;\n    disconnect: (handle: string, errorFn?: (errorMsg: string) => void) => void;\n    discoverServices: (handle: string, serviceUUIDs: Array<string>, completeFn: (services: Array<Partial<BluetoothRemoteGATTService>>) => void, errorFn?: (errorMsg: string) => void) => void;\n    discoverIncludedServices: (handle: string, serviceUUIDs: Array<string>, completeFn: (services: Array<Partial<BluetoothRemoteGATTService>>) => void, errorFn?: (errorMsg: string) => void) => void;\n    discoverCharacteristics: (handle: string, characteristicUUIDs: Array<string>, completeFn: (characteristics: Array<Partial<BluetoothRemoteGATTCharacteristic>>) => void, errorFn?: (errorMsg: string) => void) => void;\n    discoverDescriptors: (handle: string, descriptorUUIDs: Array<string>, completeFn: (descriptors: Array<Partial<BluetoothRemoteGATTDescriptor>>) => void, errorFn?: (errorMsg: string) => void) => void;\n    readCharacteristic: (handle: string, completeFn: (value: DataView) => void, errorFn?: (errorMsg: string) => void) => void;\n    writeCharacteristic: (handle: string, value: DataView, completeFn?: () => void, errorFn?: (errorMsg: string) => void) => void;\n    enableNotify: (handle: string, notifyFn: () => void, completeFn?: () => void, errorFn?: (errorMsg: string) => void) => void;\n    disableNotify: (handle: string, completeFn?: () => void, errorFn?: (errorMsg: string) => void) => void;\n    readDescriptor: (handle: string, completeFn: (value: DataView) => void, errorFn?: (errorMsg: string) => void) => void;\n    writeDescriptor: (handle: string, value: DataView, completeFn?: () => void, errorFn?: (errorMsg: string) => void) => void;\n}\n\n/**\n * @hidden\n */\nexport class NobleAdapter extends EventEmitter implements Adapter {\n\n    public static EVENT_ENABLED: string = \"enabledchanged\";\n\n    private deviceHandles: {} = {};\n    private serviceHandles: {} = {};\n    private characteristicHandles: {} = {};\n    private descriptorHandles: {} = {};\n    private charNotifies: {} = {};\n    private foundFn: (device: Partial<BluetoothDevice>) => void = null;\n    private initialised: boolean = false;\n    private enabled: boolean = false;\n    private os: string = platform();\n\n    constructor() {\n        super();\n        this.enabled = this.state;\n        noble.on(\"stateChange\", () => {\n            if (this.enabled !== this.state) {\n                this.enabled = this.state;\n                this.emit(NobleAdapter.EVENT_ENABLED, this.enabled);\n            }\n        });\n    }\n\n    private get state(): boolean {\n        return (noble.state === \"poweredOn\");\n    }\n\n    private init(completeFn: () => any) {\n        if (this.initialised) return completeFn();\n        noble.on(\"discover\", this.discover.bind(this));\n        this.initialised = true;\n        completeFn();\n    }\n\n    private checkForError(errorFn, continueFn?, delay?: number) {\n        return function(error) {\n            if (error) errorFn(error);\n            else if (typeof continueFn === \"function\") {\n                const args = [].slice.call(arguments, 1);\n                if (delay === null) continueFn.apply(this, args);\n                else setTimeout(() => continueFn.apply(this, args), delay);\n            }\n        };\n    }\n\n    private bufferToDataView(buffer) {\n        // Buffer to ArrayBuffer\n        const arrayBuffer = new Uint8Array(buffer).buffer;\n        return new DataView(arrayBuffer);\n    }\n\n    private dataViewToBuffer(dataView) {\n        // DataView to TypedArray\n        const typedArray = new Uint8Array(dataView.buffer);\n        return new Buffer(typedArray);\n    }\n\n    private discover(deviceInfo) {\n        if (this.foundFn) {\n            const deviceID = (deviceInfo.address && deviceInfo.address !== \"unknown\") ? deviceInfo.address : deviceInfo.id;\n            if (!this.deviceHandles[deviceID]) this.deviceHandles[deviceID] = deviceInfo;\n\n            const serviceUUIDs = [];\n            if (deviceInfo.advertisement.serviceUuids) {\n                deviceInfo.advertisement.serviceUuids.forEach(serviceUUID => {\n                    serviceUUIDs.push(getCanonicalUUID(serviceUUID));\n                });\n            }\n\n            const manufacturerData = new Map();\n            if (deviceInfo.advertisement.manufacturerData) {\n                // First 2 bytes are 16-bit company identifier\n                let company = deviceInfo.advertisement.manufacturerData.readUInt16LE(0);\n                company = (\"0000\" + company.toString(16)).slice(-4);\n                // Remove company ID\n                const buffer = deviceInfo.advertisement.manufacturerData.slice(2);\n                manufacturerData.set(company, this.bufferToDataView(buffer));\n            }\n\n            const serviceData = new Map();\n            if (deviceInfo.advertisement.serviceData) {\n                deviceInfo.advertisement.serviceData.forEach(serviceAdvert => {\n                    serviceData.set(getCanonicalUUID(serviceAdvert.uuid), this.bufferToDataView(serviceAdvert.data));\n                });\n            }\n\n            this.foundFn({\n                id: deviceID,\n                name: deviceInfo.advertisement.localName,\n                _serviceUUIDs: serviceUUIDs,\n                adData: {\n                    rssi: deviceInfo.rssi,\n                    txPower: deviceInfo.advertisement.txPowerLevel,\n                    serviceData: serviceData,\n                    manufacturerData: manufacturerData\n                }\n            });\n        }\n    }\n\n    public getEnabled(completeFn: (enabled: boolean) => void) {\n        function stateCB() {\n            completeFn(this.state);\n        }\n\n        // tslint:disable-next-line:no-string-literal\n        if (noble.state === \"unknown\") noble[\"once\"](\"stateChange\", stateCB.bind(this));\n        else stateCB.call(this);\n    }\n\n    public startScan(serviceUUIDs: Array<string>, foundFn: (device: Partial<BluetoothDevice>) => void, completeFn?: () => void, errorFn?: (errorMsg: string) => void): void {\n\n        if (serviceUUIDs.length === 0) {\n            this.foundFn = foundFn;\n        } else {\n            this.foundFn = device => {\n                serviceUUIDs.forEach(serviceUUID => {\n                    if (device._serviceUUIDs.indexOf(serviceUUID) >= 0) {\n                        foundFn(device);\n                        return;\n                    }\n                });\n            };\n        }\n\n        this.init(() => {\n            this.deviceHandles = {};\n            function stateCB() {\n                if (this.state === true) {\n                    noble.startScanning([], false, this.checkForError(errorFn, completeFn));\n                } else {\n                    errorFn(\"adapter not enabled\");\n                }\n            }\n            // tslint:disable-next-line:no-string-literal\n            if (noble.state === \"unknown\") noble[\"once\"](\"stateChange\", stateCB.bind(this));\n            else stateCB.call(this);\n        });\n    }\n\n    public stopScan(_errorFn?: (errorMsg: string) => void): void {\n        this.foundFn = null;\n        noble.stopScanning();\n    }\n\n    public connect(handle: string, connectFn: () => void, disconnectFn: () => void, errorFn?: (errorMsg: string) => void): void {\n        const baseDevice = this.deviceHandles[handle];\n        baseDevice.once(\"connect\", connectFn);\n        baseDevice.once(\"disconnect\", () => {\n            this.serviceHandles = {};\n            this.characteristicHandles = {};\n            this.descriptorHandles = {};\n            this.charNotifies = {};\n            disconnectFn();\n        });\n        baseDevice.connect(this.checkForError(errorFn));\n    }\n\n    public disconnect(handle: string, errorFn?: (errorMsg: string) => void): void {\n        this.deviceHandles[handle].disconnect(this.checkForError(errorFn));\n    }\n\n    public discoverServices(handle: string, serviceUUIDs: Array<string>, completeFn: (services: Array<Partial<BluetoothRemoteGATTService>>) => void, errorFn?: (errorMsg: string) => void): void {\n        const baseDevice = this.deviceHandles[handle];\n        baseDevice.discoverServices([], this.checkForError(errorFn, services => {\n            const discovered = [];\n            services.forEach(serviceInfo => {\n                const serviceUUID = getCanonicalUUID(serviceInfo.uuid);\n\n                if (serviceUUIDs.length === 0 || serviceUUIDs.indexOf(serviceUUID) >= 0) {\n                    if (!this.serviceHandles[serviceUUID]) this.serviceHandles[serviceUUID] = serviceInfo;\n\n                    discovered.push({\n                        uuid: serviceUUID,\n                        primary: true\n                    });\n                }\n            });\n\n            completeFn(discovered);\n        }));\n    }\n\n    public discoverIncludedServices(handle: string, serviceUUIDs: Array<string>, completeFn: (services: Array<Partial<BluetoothRemoteGATTService>>) => void, errorFn?: (errorMsg: string) => void): void {\n        const serviceInfo = this.serviceHandles[handle];\n        serviceInfo.discoverIncludedServices([], this.checkForError(errorFn, services => {\n\n            const discovered = [];\n            services.forEach(service => {\n                const serviceUUID = getCanonicalUUID(service.uuid);\n\n                if (serviceUUIDs.length === 0 || serviceUUIDs.indexOf(serviceUUID) >= 0) {\n                    if (!this.serviceHandles[serviceUUID]) this.serviceHandles[serviceUUID] = service;\n\n                    discovered.push({\n                        uuid: serviceUUID,\n                        primary: false\n                    });\n                }\n            }, this);\n\n            completeFn(discovered);\n        }));\n    }\n\n    public discoverCharacteristics(handle: string, characteristicUUIDs: Array<string>, completeFn: (characteristics: Array<Partial<BluetoothRemoteGATTCharacteristic>>) => void, errorFn?: (errorMsg: string) => void): void {\n        const serviceInfo = this.serviceHandles[handle];\n        serviceInfo.discoverCharacteristics([], this.checkForError(errorFn, characteristics => {\n\n            const discovered = [];\n            characteristics.forEach(characteristicInfo => {\n                const charUUID = getCanonicalUUID(characteristicInfo.uuid);\n\n                if (characteristicUUIDs.length === 0 || characteristicUUIDs.indexOf(charUUID) >= 0) {\n                    if (!this.characteristicHandles[charUUID]) this.characteristicHandles[charUUID] = characteristicInfo;\n\n                    discovered.push({\n                        uuid: charUUID,\n                        properties: {\n                            broadcast:                  (characteristicInfo.properties.indexOf(\"broadcast\") >= 0),\n                            read:                       (characteristicInfo.properties.indexOf(\"read\") >= 0),\n                            writeWithoutResponse:       (characteristicInfo.properties.indexOf(\"writeWithoutResponse\") >= 0),\n                            write:                      (characteristicInfo.properties.indexOf(\"write\") >= 0),\n                            notify:                     (characteristicInfo.properties.indexOf(\"notify\") >= 0),\n                            indicate:                   (characteristicInfo.properties.indexOf(\"indicate\") >= 0),\n                            authenticatedSignedWrites:  (characteristicInfo.properties.indexOf(\"authenticatedSignedWrites\") >= 0),\n                            reliableWrite:              (characteristicInfo.properties.indexOf(\"reliableWrite\") >= 0),\n                            writableAuxiliaries:        (characteristicInfo.properties.indexOf(\"writableAuxiliaries\") >= 0)\n                        }\n                    });\n\n                    characteristicInfo.on(\"data\", (data, isNotification) => {\n                        if (isNotification === true && typeof this.charNotifies[charUUID] === \"function\") {\n                            const dataView = this.bufferToDataView(data);\n                            this.charNotifies[charUUID](dataView);\n                        }\n                    });\n                }\n            }, this);\n\n            completeFn(discovered);\n        }));\n    }\n\n    public discoverDescriptors(handle: string, descriptorUUIDs: Array<string>, completeFn: (descriptors: Array<Partial<BluetoothRemoteGATTDescriptor>>) => void, errorFn?: (errorMsg: string) => void): void {\n        const characteristicInfo = this.characteristicHandles[handle];\n        characteristicInfo.discoverDescriptors(this.checkForError(errorFn, descriptors => {\n\n            const discovered = [];\n            descriptors.forEach(descriptorInfo => {\n                const descUUID = getCanonicalUUID(descriptorInfo.uuid);\n\n                if (descriptorUUIDs.length === 0 || descriptorUUIDs.indexOf(descUUID) >= 0) {\n                    const descHandle = characteristicInfo.uuid + \"-\" + descriptorInfo.uuid;\n                    if (!this.descriptorHandles[descHandle]) this.descriptorHandles[descHandle] = descriptorInfo;\n\n                    discovered.push({\n                        uuid: descUUID\n                    });\n                }\n            }, this);\n\n            completeFn(discovered);\n        }));\n    }\n\n    public readCharacteristic(handle: string, completeFn: (value: DataView) => void, errorFn?: (errorMsg: string) => void): void {\n        this.characteristicHandles[handle].read(this.checkForError(errorFn, data => {\n            const dataView = this.bufferToDataView(data);\n            completeFn(dataView);\n        }));\n    }\n\n    public writeCharacteristic(handle: string, value: DataView, completeFn?: () => void, errorFn?: (errorMsg: string) => void): void {\n        const buffer = this.dataViewToBuffer(value);\n        const characteristic = this.characteristicHandles[handle];\n\n        // writeWithoutResponse and authenticatedSignedWrites don't require a response\n        const withoutResponse = characteristic.properties.indexOf(\"writeWithoutResponse\") >= 0\n                             || characteristic.properties.indexOf(\"authenticatedSignedWrites\") >= 0;\n\n        // Add a small delay for writing without response when not on MacOS\n        const delay = (this.os !== \"darwin\" && withoutResponse) ? 25 : null;\n\n        characteristic.write(buffer, withoutResponse, this.checkForError(errorFn, completeFn, delay));\n    }\n\n    public enableNotify(handle: string, notifyFn: (value: DataView) => void, completeFn?: () => void, errorFn?: (errorMsg: string) => void): void {\n        if (this.charNotifies[handle]) {\n            this.charNotifies[handle] = notifyFn;\n            return completeFn();\n        }\n        this.characteristicHandles[handle].once(\"notify\", state => {\n            if (state !== true) return errorFn(\"notify failed to enable\");\n            this.charNotifies[handle] = notifyFn;\n            completeFn();\n        });\n        this.characteristicHandles[handle].notify(true, this.checkForError(errorFn));\n    }\n\n    public disableNotify(handle: string, completeFn?: () => void, errorFn?: (errorMsg: string) => void): void {\n        if (!this.charNotifies[handle]) {\n            return completeFn();\n        }\n        this.characteristicHandles[handle].once(\"notify\", state => {\n            if (state !== false) return errorFn(\"notify failed to disable\");\n            if (this.charNotifies[handle]) delete this.charNotifies[handle];\n            completeFn();\n        });\n        this.characteristicHandles[handle].notify(false, this.checkForError(errorFn));\n    }\n\n    public readDescriptor(handle: string, completeFn: (value: DataView) => void, errorFn?: (errorMsg: string) => void): void {\n        this.descriptorHandles[handle].readValue(this.checkForError(errorFn, data => {\n            const dataView = this.bufferToDataView(data);\n            completeFn(dataView);\n        }));\n    }\n\n    public writeDescriptor(handle: string, value: DataView, completeFn?: () => void, errorFn?: (errorMsg: string) => void): void {\n        const buffer = this.dataViewToBuffer(value);\n        this.descriptorHandles[handle].writeValue(buffer, this.checkForError(errorFn, completeFn));\n    }\n}\n\n/**\n * @hidden\n */\nexport const adapter = new NobleAdapter();\n"],"sourceRoot":"../src"}